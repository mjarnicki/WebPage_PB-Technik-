/* GLOBAL STYLES
-------------------------------------------------- */
/* Padding below the footer and lighter body text */

body {
  padding-top: 3rem;
  padding-bottom: 0rem;
  margin: 0px;
  color: #5a5a5a;
  font-family: Roboto, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  background-color: #68686833;
  overflow-x: hidden;
}





main {
  width: 100%;
  overflow: hidden;
}

a {
  color: #5a5a5a;
}


ul {
  text-align: center;
}
/* TODO: język powinien być ujednolicony. Jak po angielsku, to po angielsku */

.kolor {
  background-color: white;
  height: 100px;
  font-size: 30px ;
  color: #5a5a5a;
  
}
/* TODO: Nazewnictwo klas z myślnikami, czyli w tym wypasdku logo-jaka */

.logojaka {
  font-size: 40px;
}

.btnpresentation {
  background-color:#d86a21;
  font-size: larger;
  color: white;
  margin: 10px;
}

/* TODO: Dla fajniejszego efektu do hoverów możesz dodać jeszcze efekt transition https://www.w3schools.com/css/css3_transitions.asp */
.btnpresentation:hover {
  background-color:#5a5a5a;
  color: white;
}




.pbtlogo {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  z-index: -1;
  
}

.btnunderseries {
  background-color: #d86a21;
  border: none;
  font-size: 20px;
}

/* TODO: Tutaj przydałby się SCSS, żeby dało się zagnieżdżać. Pewnie w projekcie w React juz z tego kożystasz. */
a.nav-link.active {
  font-size: 16px;
  
  font-weight:500;
  color: #d86a21;
  border-radius: 5px;
}


a.nav-link.active:hover {
  font-size: 16px;
  
  font-weight:500;
  background-color: #d86a21;
  border-radius: 5px;
}



li.nav-item {
background-color: white;
}


.list-group-item:hover {
  /* margin: 10px; */
  background-color:#d86a21;
  border-radius: 3px;
  
}

.collapse {
  border-radius: 20px;
}




/* CUSTOMIZE THE CAROUSEL
-------------------------------------------------- */

/* zdjęcie na pierwszej częsci karuzeli */


/* Carousel base class */
.carousel {
  margin-bottom: 8rem;
  background-color: white;
}
/* Since positioning the image, we need to help out the caption */
.carousel-caption {
  bottom: 4rem;
  /* left: 180px; */
  z-index: 10;
  background-color: rgba(0, 0, 0, 0.37);
  border-radius: 10px;
  padding: 20px;
  width: 300px;
  
}

.carousel-caption h1 {
text-align: center;
}

.carousel-caption p {
  text-align: center;
  }

/* Declare heights because of positioning of img element */
.carousel-item {
  height: 32rem;
}
.carousel-item > img {
  height: 32rem;
  position: absolute;
  left: 30%;
  
}


/* MARKETING CONTENT
-------------------------------------------------- */

/* Center align the text within the three columns below the carousel */
.marketing .col-lg-4 {
  margin-bottom: 1.5rem;
  text-align: center;
  font-size: 20px;
}
.marketing h2 {
  font-weight: 400;
  font-size: 60px;
}
/* rtl:begin:ignore */
.marketing .col-lg-4 p {
  margin-right: .75rem;
  margin-left: .75rem;
  
}
/* rtl:end:ignore */

.imgw {
  width: 100%;
  cursor: pointer;
}
.col-md-4 {
  margin: auto;
}

/* Featurettes
------------------------- */

.featurette-divider {
  margin: 4rem 0; /* Space out the Bootstrap <hr> more */
}

/* Thin out the marketing headings */
.featurette-heading {
  letter-spacing: -.05rem;
  margin: 20px 0px 20px 0px;

}


/* RESPONSIVE CSS
-------------------------------------------------- */

@media (min-width: 40em) {
  /* Bump up size of carousel content */
  .carousel-caption p {
    margin-bottom: 1.25rem;
    font-size: 1.25rem;
    line-height: 1.4;
  }

  .featurette-heading {
    font-size: 50px;
  }



}


/* style dla aplikacja.html */

.headeraplikacje {
  text-align: right;
 color: white;
 font-size: 50px;
 margin-top: 80px;
 padding :140px;
 background-image: url("/pbtechnik/jaka/images/Inspection检测.JPG");
 background-size: cover;
 background-position-y: -400px;
 
 /* background-position-x: -200px; */
}

.headertekst {
  /* display:inline-block; */
  background-color:#d86a21;
  border-radius: 10px;
}

.appheader {
  background-color:#5a5a5a;
  color: white;
  margin-top: 20px;
  margin-bottom: 0px;
  padding: 5px;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  font-size: 28px;
}

.gallery {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  flex-direction: row;
  background-color: rgba(46, 43, 43, 0.363);

}

.galleryitem {
  flex-basis: 30%;
  text-align: center;
  padding-top: 50px;
  z-index: 1;

}
/* 
.galleryitem:hover {
  transform: scale(1.05);
  text-align: center;
  padding-top: 50px;z-index: 1;
  
} */

video {
  width: 100%;
  height: auto !important;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}

/* style dla robota na stronie głównej */

.robotbanner {
  overflow: hidden;
  height: 80vh;
  width: 100%;
  padding: 0px;
}

/* TODO: Sugeruję użycie background image dla robotbanner zamiast osobnego diva z tłem. A jeżeli nie ma innego wyjścia (widzę, że używasz filtra, czego dla background image nie dałoby się zastosować). ew. możesz użyć pseudoelementu. Tutaj przykład https://css-tricks.com/apply-a-filter-to-a-background-image/  */
.robotpic {
  opacity: 0.9;
  object-fit: cover;
  height: 100vh;
  width: 100vw;
  filter: grayscale(100%) brightness(50%) opacity(90%);
  padding: 0px;
  margin: 0px;
}

.robotheader {
  /* z-index: 1; */
  position: absolute;
  top: 25%;
  left: 10%;
  width: 30%;
  font-size: 70px;
  color: rgb(255, 255, 255);
  animation-name: shuffleleft;
  animation-duration: 3s;

}

/* TODO: Przyczyną tego, że na mobilce miałeś obcięte menu, jest poniższy element. Rozciągał on widoczny ekran powyżej szerokości body. Rozwiązań jest kilka.  Przerobiłem zdjęcie ramienia robota w taki sposób, żeby nie było wolnej przestrzeni wokół grafiki. Teraz możesz pobawić się z wypozycjonowaniem grafiki w zależności od szerokości ekranu przy pomocy @media query */
.robotarm {
  position: absolute;
  left: 72%;
  bottom: 9%;
  height: 68%;
  animation-name: shuffleright;
  animation-duration: 5s;
  animation-delay: 3;
  
  /* Poniżej przykład jak można to zrobić dla zakresu między 600 a 1000 px */
  /* @media (min-width: 600px) and (max-width: 1000px) {
    left: 60%;
  } */
}



.wrapper {
  font-size: 35px;
}

.typepos1 {
  font-size: 20px;
  display: block;
  position: absolute;
  top: 25%;
  left: 10%;
  width: 20%;
  font-size: 40px;
  color: rgb(255, 255, 255);
  /* animation-name: typing; */
  animation-duration: 2s;
}
.typepos2 {
  display: block;
  position: absolute;
  top: 40%;
  left: 10%;
  width: 20%;
  font-size: 30px;
  color: rgb(255, 255, 255);
  /* animation-name: shuffleleft; */
  /* animation-duration: 3s; */
}
.typepos3 {
  display: block;
  position: absolute;
  top: 55%;
  left: 10%;
  width: 20%;
  font-size: 30px;
  color: rgb(255, 255, 255);
  /* animation-name: shuffleleft; */
  animation-duration: 4s;
}
.typepos4 {
  display: block;
  position: absolute;
  top: 70%;
  left: 10%;
  width: 20%;
  font-size: 30px;
  color: rgb(255, 255, 255);
  /* animation-name: shuffleleft; */
  animation-duration: 5s;
}

/* TODO: Klasa nie jest używana */
.visibleOnMobile {
  display: none;
}

@keyframes shuffleright {
  0% {
    left: 200%;
  }
}

@keyframes shuffleleft {
  0% {
    left: -100%;
  }

}

.carousel-control-next-icon {
  color: black;
  background-color:#d86a21;
  border-radius: 20%;
}

.carousel-control-prev-icon {

  background-color:#d86a21;
  border-radius: 20%;
}

@media (max-width: 768px) {

  a {
    color: #5a5a5a;
  }
  
 
  .carousel-item > img {
    position: absolute;
    left: 0%;
  }

.carousel-caption {
 top: 20%;
 height: 60%;
 width: 70%;
margin: 0 auto;

  }

.robotbanner {
  position: relative;
  height: 60vh;
  width: 100%;
}

.robotheader {
display: none;
}

.robotarm {
  left: 25%;
  width: 100%;
}


.galleryitem {
  flex-basis: 80%;
  
}


.col-md-7 {
  font-size: 0px;
  margin: 0px auto;
}

.marketing h2 {
  /* font-weight: 400; */
  font-size: 40px;
}

.wrapper {
  font-size: 14px;
}

.typepos1 {
  font-size: 10px;
  display: block;
  position: absolute;
  top: 30%;
  left: 10%;
  width: 20%;
  font-size: 40px;
  color: rgb(255, 255, 255);
  /* animation-name: typing; */
  animation-duration: 2s;
}
.typepos2 {
  display: block;
  position: absolute;
  top: 50%;
  left: 10%;
  width: 20%;
  font-size: 30px;
  color: rgb(255, 255, 255);
  /* animation-name: shuffleleft; */
  /* animation-duration: 3s; */
}
.typepos3 {
  display: block;
  position: absolute;
  top: 65%;
  left: 10%;
  width: 20%;
  font-size: 30px;
  color: rgb(255, 255, 255);
  /* animation-name: shuffleleft; */
  animation-duration: 4s;
}
.typepos4 {
  display: block;
  position: absolute;
  top: 80%;
  left: 10%;
  width: 20%;
  font-size: 30px;
  color: rgb(255, 255, 255);
  /* animation-name: shuffleleft; */
  animation-duration: 5s;
}

}

/* TODO: Przy media query używałbym pixeli jako wartości bezwzględnych */
@media (min-width: 62em) {
  .featurette-heading {
    margin-top: 7rem;
  }


}

.wrapper {
  width: 100px;
  height: 100vh;
  /*This part is important for centering*/
  display: flex;
  align-items: center;
  justify-content: center;
}


.typing-demo1 {
  width: 12ch;
  animation: typing 1s steps(11), blink .5s step-end infinite alternate;
  animation-delay: 1s;
  animation-fill-mode:backwards;
  white-space: nowrap;
  overflow: hidden;
  border-right: 3px solid orange;
  font-family: monospace;
  font-size: 2em;
}

.typing-demo2 {
  width: 11ch;
  animation: typing 1s steps(11), blink .5s step-end infinite alternate;
  animation-delay: 2s;
  animation-fill-mode:backwards;
  white-space: nowrap;
  overflow: hidden;
  border-right: 3px solid orange;
  font-family: monospace;
  font-size: 2em;
}


.typing-demo3 {
  width: 11ch;
  animation: typing 1s steps(11), blink .5s step-end infinite alternate;
  animation-delay: 3s;
  animation-fill-mode:backwards;
  white-space: nowrap;
  overflow: hidden;
  border-right: 3px solid orange;
  font-family: monospace;
  font-size: 2em;
}

.typing-demo4 {
  width: 13ch;
  animation: typing 1s steps(13), blink .5s step-end infinite alternate;
  animation-delay: 4s;
  animation-fill-mode:backwards;
  white-space: nowrap;
  overflow: hidden;
  border-right: 3px solid orange;
  font-family: monospace;
  font-size: 2em;
}

@keyframes typing {
  from {
    width: 0
  }
}

@keyframes blink {
  50% {
    border-color: transparent
  }
}


    




